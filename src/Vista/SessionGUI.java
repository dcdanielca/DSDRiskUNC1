package Vista;

import AppAccount.AccountManager;
import AppGameSetup.SessionManager;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.ParseException;

/**
 *
 * @author GROUP 1 UNC
 */
public class SessionGUI extends javax.swing.JFrame {

    private ArrayList<JRadioButton> radiobuttons = new ArrayList<>();
    private ArrayList<JRadioButton> labels = new ArrayList<>();
    ButtonGroup bg = new ButtonGroup();
    String username;

    public SessionGUI(String username) throws ParseException {
        initComponents();
        this.username = username;
        title2Label.setText("Welcome " + username);
        this.setVisible(true);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.changeSessionList(this.listSession());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title1Label = new javax.swing.JLabel();
        image1 = new javax.swing.JLabel();
        title3Label = new javax.swing.JLabel();
        title2Label = new javax.swing.JLabel();
        aboutLabel = new javax.swing.JLabel();
        reload = new javax.swing.JButton();
        deleteContact = new javax.swing.JButton();
        logOut = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        availableSession = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        makeRequest = new javax.swing.JButton();
        createSession = new javax.swing.JButton();
        addContact = new javax.swing.JButton();
        changePassword = new javax.swing.JButton();
        imageBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title1Label.setFont(new java.awt.Font("AR DESTINE", 0, 48)); // NOI18N
        title1Label.setForeground(new java.awt.Color(255, 0, 0));
        title1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title1Label.setText("DSDRisk Game");
        getContentPane().add(title1Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 78));

        image1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        image1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Warriors.jpg"))); // NOI18N
        getContentPane().add(image1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, 220, 110));

        title3Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title3Label.setText("What would you like to do?");
        getContentPane().add(title3Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 190, -1));

        title2Label.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        title2Label.setText("Welcome [Username]");
        getContentPane().add(title2Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, -1, -1));

        aboutLabel.setForeground(new java.awt.Color(0, 0, 204));
        aboutLabel.setText("About this game");
        getContentPane().add(aboutLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 470, -1, -1));

        reload.setText("Reload");
        reload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadActionPerformed(evt);
            }
        });
        getContentPane().add(reload, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 190, -1, -1));

        deleteContact.setText("Delete contact");
        deleteContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteContactActionPerformed(evt);
            }
        });
        getContentPane().add(deleteContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, 160, 30));

        logOut.setText("Log out");
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });
        getContentPane().add(logOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 410, 160, 30));

        jPanel1.setLayout(new java.awt.BorderLayout());
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(556, 265, -1, -1));

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel4.setLayout(new java.awt.GridLayout(1, 0));
        jPanel2.add(jPanel4, java.awt.BorderLayout.LINE_END);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Session ID", "Username"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        availableSession.setViewportView(jPanel2);

        getContentPane().add(availableSession, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, 390, 160));

        makeRequest.setText("Make request");
        getContentPane().add(makeRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 400, 160, 40));

        createSession.setText("Create session");
        createSession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createSessionActionPerformed(evt);
            }
        });
        getContentPane().add(createSession, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 160, 30));

        addContact.setText("Add contact");
        addContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addContactActionPerformed(evt);
            }
        });
        getContentPane().add(addContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, 160, 30));

        changePassword.setText("Change password");
        changePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordActionPerformed(evt);
            }
        });
        getContentPane().add(changePassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, 160, 30));

        imageBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/background700400.jpg"))); // NOI18N
        getContentPane().add(imageBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 700, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed
        try {
            JSONArray array = AccountManager.logoutAccount(this.username);
            boolean status = (boolean) (((JSONObject) (array.get(0))).get("status"));
            String message = (String) (((JSONObject) (array.get(0))).get("message"));
            if (status) {
                this.setVisible(false);
                new LogInGUI(this.username).setVisible(true);
            } else {
                JOptionPane.showOptionDialog(null, message, "Message",
                        JOptionPane.INFORMATION_MESSAGE, JOptionPane.INFORMATION_MESSAGE,
                        null, new Object[]{"Accept"}, null);
            }
        } catch (ParseException ex) {
            Logger.getLogger(LogInGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_logOutActionPerformed

    private void createSessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createSessionActionPerformed
        try {
            JSONArray array = SessionManager.createSession(this.username);
            boolean status = (boolean) (((JSONObject) (array.get(0))).get("status"));
            String message = (String) (((JSONObject) (array.get(0))).get("message"));
            int sessionId = Integer.parseInt(String.valueOf(((JSONObject) (array.get(0))).get("sessionId")));
            if (status) {
                this.setVisible(false);
                new InitialSetupHostGUI(this.username, sessionId).setVisible(true);
            } else {
                JOptionPane.showOptionDialog(null, message, "Message",
                        JOptionPane.INFORMATION_MESSAGE, JOptionPane.INFORMATION_MESSAGE,
                        null, new Object[]{"Accept"}, null);
            }
        } catch (ParseException ex) {
            Logger.getLogger(LogInGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_createSessionActionPerformed

    private void addContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addContactActionPerformed
        new AddContactGUI(this.username).setVisible(true);
    }//GEN-LAST:event_addContactActionPerformed

    private void deleteContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteContactActionPerformed
        try {
            new DeleteContactGUI(this.username).setVisible(true);
        } catch (ParseException ex) {
            Logger.getLogger(SessionGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteContactActionPerformed

    private void changePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordActionPerformed
        new ChangePasswordGUI(this.username).setVisible(true);
    }//GEN-LAST:event_changePasswordActionPerformed

    private void reloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadActionPerformed

        try {
            this.changeSessionList(this.listSession());
        } catch (ParseException ex) {
            Logger.getLogger(SessionGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_reloadActionPerformed

    private String[][] listSession() throws ParseException {

        JSONArray array = SessionManager.listSession();
        boolean status = (boolean) (((JSONObject) (array.get(0))).get("status"));

        if (status) {
            int sessionsLength = ((JSONArray) (((JSONObject) (array.get(0))).get("sessions"))).size();
            String[][] sessionList = new String[sessionsLength][2];
            for (int i = 0; i < sessionsLength; i++) {
                int playersLength = ((JSONArray) ((JSONObject) (((JSONArray) (((JSONObject) (array.get(0))).get("sessions"))).get(i))).get("players")).size();
                for (int j = 0; j < playersLength; j++) {
                    String type = (String) (((JSONObject) (((JSONArray) ((JSONObject) (((JSONArray) (((JSONObject) (array.get(0))).get("sessions"))).get(i))).get("players")).get(j))).get("type"));
                    if (type.equals("HOST")) {
                        sessionList[i][1] = String.valueOf(((JSONObject) (((JSONArray) ((JSONObject) (((JSONArray) (((JSONObject) (array.get(0))).get("sessions"))).get(i))).get("players")).get(j))).get("username"));
                    }

                }
                sessionList[i][0] = String.valueOf(((JSONObject) (((JSONArray) (((JSONObject) (array.get(0))).get("sessions"))).get(i))).get("id"));
            }
            return sessionList;
        } else {
            String message = (String) (((JSONObject) (array.get(0))).get("message"));
            JOptionPane.showOptionDialog(null, message, "Message",
                    JOptionPane.INFORMATION_MESSAGE, JOptionPane.INFORMATION_MESSAGE,
                    null, new Object[]{"Accept"}, null);
        }
        return null;
    }

    private void changeSessionList(String[][] sessions) {

        if (sessions != null) {
            int rows = 2;
            int columns = sessions[0].length;
            Object[] columnNames = {"Session ID", "Username"};
            Object[][] data = new Object[0][2];
            DefaultTableModel model = new DefaultTableModel(data, columnNames);

            for (int i = 0; i < rows; i++) {
                Object newData[] = new Object[2];
                for (int j = 0; j < columns; j++) {
                    newData[j] = sessions[i][j];
                }
                model.addRow(newData);
            }
            jTable1.setModel(model);
        }
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aboutLabel;
    private javax.swing.JButton addContact;
    private javax.swing.JScrollPane availableSession;
    private javax.swing.JButton changePassword;
    private javax.swing.JButton createSession;
    private javax.swing.JButton deleteContact;
    private javax.swing.JLabel image1;
    private javax.swing.JLabel imageBackground;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logOut;
    private javax.swing.JButton makeRequest;
    private javax.swing.JButton reload;
    private javax.swing.JLabel title1Label;
    private javax.swing.JLabel title2Label;
    private javax.swing.JLabel title3Label;
    // End of variables declaration//GEN-END:variables
}
